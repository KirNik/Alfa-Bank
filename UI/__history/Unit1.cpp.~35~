#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
#include "Unit2.h"

#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
TCore  *pCore;

__fastcall TForm1::TForm1(TComponent* Owner) : TForm(Owner)
{
	Constraints->MinHeight = 270;
	Constraints->MinWidth  = 385;
	Constraints->MaxWidth  = 385;
	Form1->Width  = Constraints->MinWidth;
	Form1->Height = Constraints->MinHeight;

	m_bOpenSession = false;
	FindWordsMenu->Visible = false;

	pCore = new TCore();
}

void __fastcall TForm1::OpenWordsMenuClick(TObject *Sender)
{
	if (OpenDialog1->Execute())
	{
		TStringList *pList = new TStringList();
		pList->LoadFromFile(OpenDialog1->FileName);

		CheckMenu(OpenWordsMenu);
	}
}

void __fastcall TForm1::OpenMapMenuClick(TObject *Sender)
{
	if (OpenDialog1->Execute())
	{

		CheckMenu(OpenMapMenu);
	}
}

void __fastcall TForm1::FindWordsMenuClick(TObject *Sender)
{
	TDStringVector lstWords = pCore->GetList();
	StringGrid1->RowCount = lstWords.size()+1;

	for (TDStringVector::iterator itr = lstWords.begin(); itr != lstWords.end(); ++itr)
	{
        static __int32 ARow = 1;
		StringGrid1->Cells[0][ARow++] = (*itr).c_str();
	}
}

void TForm1::CheckMenu(TObject *Sender)
{
	if (TMenuItem* pItem = dynamic_cast<TMenuItem*>(Sender))
	{
    	pItem->Checked = true;
	}

	if (OpenWordsMenu->Checked && OpenMapMenu->Checked)
	{
		m_bOpenSession = true;
		FindWordsMenuClick(this);
	}
}

void __fastcall TForm1::FormResize(TObject *Sender)
{
	StringGrid1->Height = Form1->Height - StringGrid1->Top - 65;
	Memo1->Height		= StringGrid1->Height + StringGrid1->Top - 8;
}


